<<<<<<< HEAD
* url encode & url decode
  #+BEGIN_SRC emacs-lisp
    (defun func-region (start end func)
      "run a function over the region between START and END in current buffer."
      (save-excursion
        (let ((text (delete-and-extract-region start end)))
          (insert (funcall func text)))))

    (defun urlencode (start end)
      "urlencode the region between START and END in current buffer."
      (interactive "r")
      (func-region start end #'url-hexify-string))

    (defun urldecode (start end)
      "de-urlencode the region between START and END in current buffer."
      (interactive "r")
      (func-region start end #'url-unhex-string))
  #+END_SRC

=======
* web-mode
** Settings
  #+BEGIN_SRC emacs-lisp
    (add-to-list 'load-path (expand-file-name "~/.emacs.d/src/web-mode"))
    (require 'web-mode)
    (add-to-list 'auto-mode-alist '("\\.phtml\\'" . web-mode))
    (add-to-list 'auto-mode-alist '("\\.tpl\\.php\\'" . web-mode))
    (add-to-list 'auto-mode-alist '("\\.[agj]sp\\'" . web-mode))
    (add-to-list 'auto-mode-alist '("\\.as[cp]x\\'" . web-mode))
    (add-to-list 'auto-mode-alist '("\\.erb\\'" . web-mode))
    (add-to-list 'auto-mode-alist '("\\.mustache\\'" . web-mode))
    (add-to-list 'auto-mode-alist '("\\.djhtml\\'" . web-mode))
    (add-to-list 'auto-mode-alist '("\\.html?\\'" . web-mode))
  #+END_SRC
** auto-complete
   #+BEGIN_SRC emacs-lisp
     (setq web-mode-ac-sources-alist
       '(("css" . (ac-source-css-property ac-source-emmet-css-snippets))
         ("html" . (ac-source-words-in-buffer ac-source-abbrev))))        

   #+END_SRC

** Shortcuts
*** General
    | M-;     | comment / uncomment line(s)           |
    | C-c C-f | toggle folding on a tag/block         |
    | C-c C-i | indent entire buffer                  |
    | C-c C-m | mark and expand                       |
    | C-c C-s | insert snippet                        |
    | C-c C-w | toggle display of invalid whitespaces | 
*** DOM
    | C-c C-d   | a replace apostrophes |
    | C-c C-d d | show tag mismatch     |
    | C-c C-d e | replace HTML entities |
    | C-c C-d n | normalize             |
    | C-c C-d q | replace dumb quotes   |
    | C-c C-d t | traverse dom tree     |
    | C-c C-d x | xpath                 |
*** Block
    | C-c C-b b | block beginning |
    | C-c C-b c | block close     |
    | C-c C-b e | block end       |
    | C-c C-b k | block kill      |
    | C-c C-b n | next block      |
    | C-c C-b p | previous block  |
    | C-c C-b s | block select    |
*** HTML element
    | C-c C-e / | element close                |
    | C-c C-e a | select element content       |
    | C-c C-e b | element beginning            |
    | C-c C-e c | element clone                |
    | C-c C-e d | child element (down)         |
    | C-c C-e e | element end                  |
    | C-c C-e f | toggle folding on children   |
    | C-c C-e i | element insert               |
    | C-c C-e k | element kill                 |
    | C-c C-e m | mute blanks between children |
    | C-c C-e n | next element                 |
    | C-c C-e p | previous element             |
    | C-c C-e r | rename element               |
    | C-c C-e s | select element               |
    | C-c C-e t | transpose element            |
    | C-c C-e u | parent element (up)          |
    | C-c C-e v | element vanish               |
    | C-c C-e w | wrap element                 |
*** HTML tag
    | C-c C-t   | a sort attributes  |
    | C-c C-t b | tag beginning      |
    | C-c C-t e | tag end            |
    | C-c C-t m | fetch matching tag |
    | C-c C-t n | next tag           |
    | C-c C-t p | previous tag       |
    | C-c C-t s | select tag         |
*** HTML attribute
    | C-c C-a b | attribute beginning |
    | C-c C-a e | attribute end       |
    | C-c C-a i | attribute insert    |
    | C-c C-a k | attribute kill      |
    | C-c C-a n | attribute next      |
    | C-c C-a p | attribute previous  |
    | C-c C-a s | attribute select    |
    | C-c C-a t | attribute transpose |


    
    
  
* emmet-mode
  #+BEGIN_SRC emacs-lisp
    (require 'emmet-mode)
    (add-hook 'sgml-mode-hook 'emmet-mode)
    (add-hook 'web-mode-hook 'emmet-mode)
    (add-hook 'css-mode-hook 'emmet-mode)
    (add-hook 'sass-mode-hook' emmet-mode)
  #+END_SRC
>>>>>>> 74a8a6372c7027270d2d936888d04275fc62e45d
